<!DOCTYPE HTML>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
    <title>编辑话题</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <link rel="stylesheet" href="/css/bootstrap.css"/>
    <link href="/js/um/themes/default/_css/umeditor.css" type="text/css" rel="stylesheet">
    <script type="text/javascript" src="/js/um/third-party/jquery.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="/js/um/umeditor.config.js"></script>
    <script type="text/javascript" charset="utf-8" src="/js/editor_api.js"></script>
    <style type="text/css">
       .topic-head{
           width: 1000px;
           margin: 10px auto;
       }
        .form-control{
            height: 40px;
            line-height: 40px;
        }
        .error{
            display: none;
            width: 1000px;
            margin: 10px auto;
            font-size: 16px;
            color: #ff2a00;
            height: 40px;
            line-height: 40px;
        }
    </style>
</head>
<body>
<div class="topic-head">
    <div class="form-group">
        <label for="title">title</label>
        <input type="text" class="form-control"  id="title" onfocus="init();" placeholder="title">
    </div>
</div>
<script type="text/plain" id="myEditor" style="width:1000px;height:240px;margin:0 auto;"></script>
<div class="clear"></div>
<div class="topic-head">
    <button type="button" onclick="submit(this);" class="btn btn-info">提交</button>
</div>
<p id="error" class="error bg-danger"></p>
<script type="text/javascript">
    //实例化编辑器
    var err = document.getElementById('error');
    var um = UM.getEditor('myEditor');
    //按钮的操作
    function insertHtml() {
        var value = prompt('插入html代码', '');
        um.execCommand('insertHtml', value)
    }
    function isFocus(){
        alert(um.isFocus())
    }
    function doBlur(){
        um.blur()
    }
    function createEditor() {
        enableBtn();
        um = UM.getEditor('myEditor');
    }
    function getAllHtml() {
        alert(UM.getEditor('myEditor').getAllHtml())
    }
    function getContent() {
        var arr = [];
        arr.push(UM.getEditor('myEditor').getContent());
        return arr.join("\n");
    }
    function getPlainTxt() {
        var arr = [];
        arr.push("使用editor.getPlainTxt()方法可以获得编辑器的带格式的纯文本内容");
        arr.push("内容为：");
        arr.push(UM.getEditor('myEditor').getPlainTxt());
        alert(arr.join('\n'))
    }
    function setContent(isAppendTo) {
        var arr = [];
        arr.push("使用editor.setContent('欢迎使用umeditor')方法可以设置编辑器的内容");
        UM.getEditor('myEditor').setContent('欢迎使用umeditor', isAppendTo);
        alert(arr.join("\n"));
    }
    function setDisabled() {
        UM.getEditor('myEditor').setDisabled('fullscreen');
        disableBtn("enable");
    }

    function setEnabled() {
        UM.getEditor('myEditor').setEnabled();
        enableBtn();
    }

    function getText() {
        //当你点击按钮时编辑区域已经失去了焦点，如果直接用getText将不会得到内容，所以要在选回来，然后取得内容
        var range = UM.getEditor('myEditor').selection.getRange();
        range.select();
        var txt = UM.getEditor('myEditor').selection.getText();
        alert(txt)
    }

    function getContentTxt() {
        var arr = [];
        arr.push("使用editor.getContentTxt()方法可以获得编辑器的纯文本内容");
        arr.push("编辑器的纯文本内容为：");
        arr.push(UM.getEditor('myEditor').getContentTxt());
        alert(arr.join("\n"));
    }
    function hasContent() {
        var arr = [];
        arr.push("使用editor.hasContents()方法判断编辑器里是否有内容");
        arr.push("判断结果为：");
        arr.push(UM.getEditor('myEditor').hasContents());
        alert(arr.join("\n"));
    }
    function setFocus() {
        UM.getEditor('myEditor').focus();
    }
    function deleteEditor() {
        disableBtn();
        UM.getEditor('myEditor').destroy();
    }
    function disableBtn(str) {
        var div = document.getElementById('btns');
        var btns = domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            if (btn.id == str) {
                domUtils.removeAttributes(btn, ["disabled"]);
            } else {
                btn.setAttribute("disabled", "true");
            }
        }
    }
    function enableBtn() {
        var div = document.getElementById('btns');
        var btns = domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            domUtils.removeAttributes(btn, ["disabled"]);
        }
    }


    function submit(obj){
        obj.setAttribute("disabled", "true");
        var title = document.getElementById('title').value;
        var content = getContent();
            if(title===''){
                err.style.display='block';
                err.innerHTML='标题不得为空';
                return false;
            }
            if(content===''){
                err.style.display='block';
                err.innerHTML='内容不得为空';
                return false;
            }
            $.post('/createTopic',{title:title,content:content},function(data){
                obj.removeAttribute('disabled');
                err.style.display='none';
                console.log(data);
                alert('编辑成功');
                window.location.href='/home';
            });
    }

    function init(){

    }












</script>
</body>
</html>